# Copyright (c) 2017, Los Alamos National Security, LLC
# All rights reserved.

# Copyright 2017. Los Alamos National Security, LLC. This software was
# produced under U.S. Government contract DE-AC52-06NA25396 for Los
# Alamos National Laboratory (LANL), which is operated by Los Alamos
# National Security, LLC for the U.S. Department of Energy. The
# U.S. Government has rights to use, reproduce, and distribute this
# software.  NEITHER THE GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY,
# LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY
# FOR THE USE OF THIS SOFTWARE.  If software is modified to produce
# derivative works, such modified software should be clearly marked, so
# as not to confuse it with the version available from LANL.
 
# Additionally, redistribution and use in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions are met:

# 1.  Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 3.  Neither the name of Los Alamos National Security, LLC, Los Alamos
# National Laboratory, LANL, the U.S. Government, nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
 
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LOS
# ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


#
# Build TPL: OpenMPI 
# 

# --- Define all the directories and common external project flags
define_external_project_args(OpenMPI TARGET openmpi)


# add version version to the autogenerated tpl_versions.h file
Jali_tpl_version_write(FILENAME ${TPL_VERSIONS_INCLUDE_FILE}
  PREFIX OpenMPI
  VERSION ${OpenMPI_VERSION_MAJOR} ${OpenMPI_VERSION_MINOR} ${OpenMPI_VERSION_PATCH})
  

# Build compiler *FLAGS strings. Pick up the CMAKE_BUILD_TYPE flags
include(BuildWhitespaceString)
build_whitespace_string(openmpi_cflags 
                        -I${TPL_INSTALL_PREFIX}/include ${Jali_COMMON_CFLAGS} )
build_whitespace_string(openmpi_cxxflags 
                        -I${TPL_INSTALL_PREFIX}/include ${Jali_COMMON_CXXFLAGS} )
build_whitespace_string(openmpi_fcflags 
                        -I${TPL_INSTALL_PREFIX}/include ${Jali_COMMON_FCFLAGS} )

# --- Add RPATH to the link flags for the compiler wrappers
set(openmpi_extra_ldflags "-Wl,-rpath,${TPL_INSTALL_PREFIX}/lib")
print_variable(openmpi_extra_ldflags)
find_package(Threads)


				   #                 CFLAGS=${openmpi_cflags}
				   # CXXFLAGS=${openmpi_cxxflags}
				   #FCFLAGS=${openmpi_fcflags}
# --- Add external project build and tie to the OpenMPI build target
ExternalProject_Add(${OpenMPI_BUILD_TARGET}
                    DEPENDS   ${OpenMPI_PACKAGE_DEPENDS}             # Package dependency target
                    TMP_DIR   ${OpenMPI_tmp_dir}                     # Temporary files directory
                    STAMP_DIR ${OpenMPI_stamp_dir}                   # Timestamp and log directory
                    # -- Download and URL definitions
                    DOWNLOAD_DIR ${TPL_DOWNLOAD_DIR}                 # Download directory
                    URL          ${OpenMPI_URL}                      # URL may be a web site OR a local file
                    URL_MD5      ${OpenMPI_MD5_SUM}                  # md5sum of the archive file
                    # -- Configure
                    SOURCE_DIR       ${OpenMPI_source_dir}           # Source directory
                    CONFIGURE_COMMAND
                                   <SOURCE_DIR>/configure
                                                --prefix=<INSTALL_DIR>
						--enable-option-checking
                                                --enable-mpi-f77
                                                --enable-mpi-f90
                                                --enable-mpi-cxx
                                                --enable-binaries
						--enable-shared
						--enable-static
						--with-wrapper-ldflags=${openmpi_extra_ldflags}
                                                CC=${CMAKE_C_COMPILER}
                                                CXX=${CMAKE_CXX_COMPILER}
                                                FC=${CMAKE_Fortran_COMPILER}
                    # -- Build
                    BINARY_DIR        ${OpenMPI_build_dir}           # Build directory 
                    BUILD_COMMAND     $(MAKE)                     # $(MAKE) enables parallel builds through make
                    BUILD_IN_SOURCE   ${OpenMPI_BUILD_IN_SOURCE}     # Flag for in source builds
                    # -- Install
                    INSTALL_DIR      ${TPL_INSTALL_PREFIX}        # Install directory
                    # -- Output control
                    ${OpenMPI_logging_args})

# --- Define variables pointing to compiler wrappers and parallel run commond
set(MPI_C_COMPILER        ${TPL_INSTALL_PREFIX}/bin/mpicc)
set(MPI_CXX_COMPILER      ${TPL_INSTALL_PREFIX}/bin/mpicxx)
set(MPI_Fortran_COMPILER  ${TPL_INSTALL_PREFIX}/bin/mpif90)
set(MPIEXEC               ${TPL_INSTALL_PREFIX}/bin/mpirun)
set(MPI_EXEC              ${TPL_INSTALL_PREFIX}/bin/mpirun)
